# Simple Content MCP Server Configuration
# Copy this file to .env and customize as needed

# ============================================================================
# TRANSPORT SETTINGS
# ============================================================================

# Transport mode: stdio, sse, or http
# - stdio: Standard input/output (for local MCP clients)
# - sse:   Server-Sent Events over HTTP (for web clients)
# - http:  HTTP JSON-RPC (for REST-like access)
MCP_MODE=stdio

# Host and port for SSE/HTTP modes (ignored in stdio mode)
MCP_HOST=localhost
MCP_PORT=8080

# Base URL for SSE mode (used for client connections)
MCP_BASE_URL=http://localhost:8080

# ============================================================================
# BATCH & PAGINATION SETTINGS
# ============================================================================

# Maximum number of items in batch operations (batch_upload, batch_get_details)
MCP_MAX_BATCH_SIZE=100

# Default page size for list operations
MCP_DEFAULT_PAGE_SIZE=50

# Maximum page size (hard limit)
MCP_MAX_PAGE_SIZE=1000

# ============================================================================
# FEATURE FLAGS
# ============================================================================

# Enable MCP resources (content://, schema://, stats://)
MCP_ENABLE_RESOURCES=true

# Enable MCP prompts (workflow guidance templates)
MCP_ENABLE_PROMPTS=true

# ============================================================================
# AUTHENTICATION (Phase 5)
# ============================================================================

# Enable authentication
# When true, all tool calls require a valid API key
MCP_AUTH_ENABLED=false

# API Keys (up to 10 keys supported: MCP_API_KEY_1 through MCP_API_KEY_10)
# Format: key:owner_id:tenant_id:expires_at
# - key:        The API key string (required)
# - owner_id:   UUID of the content owner (required)
# - tenant_id:  UUID of the tenant (optional, leave empty for none)
# - expires_at: RFC3339 timestamp (optional, leave empty for no expiration)

# Example 1: Simple key with owner
# MCP_API_KEY_1=mykey123:550e8400-e29b-41d4-a716-446655440000::

# Example 2: Key with owner and tenant
# MCP_API_KEY_2=tenant-key:550e8400-e29b-41d4-a716-446655440000:660e8400-e29b-41d4-a716-446655440001:

# Example 3: Key with expiration (expires 2026-01-01)
# MCP_API_KEY_3=temp-key:550e8400-e29b-41d4-a716-446655440000::2026-01-01T00:00:00Z

# Development key (uncomment for testing)
# MCP_API_KEY_1=dev-key:550e8400-e29b-41d4-a716-446655440000::

# ============================================================================
# STORAGE BACKENDS (Future - requires additional dependencies)
# ============================================================================

# Database connection string for PostgreSQL
# Requires: github.com/jackc/pgx/v5
# DATABASE_URL=postgresql://user:password@localhost:5432/simplecontent

# Storage backend: memory, s3, or filesystem
# Default: memory (in-memory storage, data lost on restart)
STORAGE_BACKEND=memory

# S3 Storage Configuration (when STORAGE_BACKEND=s3)
# Requires: github.com/aws/aws-sdk-go-v2
# AWS_S3_ENDPOINT=https://s3.amazonaws.com
# AWS_REGION=us-east-1
# AWS_S3_BUCKET=my-content-bucket
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key

# Filesystem Storage Configuration (when STORAGE_BACKEND=filesystem)
# STORAGE_PATH=./data

# ============================================================================
# LOGGING & MONITORING (Future)
# ============================================================================

# Log level: debug, info, warn, error
# LOG_LEVEL=info

# Enable metrics endpoint
# METRICS_ENABLED=false
# METRICS_PORT=9090

# Enable tracing
# TRACING_ENABLED=false
# TRACING_ENDPOINT=http://localhost:4318

# ============================================================================
# DEVELOPMENT & TESTING
# ============================================================================

# Enable debug mode (verbose logging, detailed errors)
# DEBUG=false

# Disable TLS verification (for local development only)
# INSECURE_SKIP_VERIFY=false

# ============================================================================
# USAGE EXAMPLES
# ============================================================================

# Example 1: Local development with stdio
# MCP_MODE=stdio
# MCP_AUTH_ENABLED=false
# MCP_ENABLE_RESOURCES=true
# MCP_ENABLE_PROMPTS=true

# Example 2: HTTP server with authentication
# MCP_MODE=http
# MCP_HOST=0.0.0.0
# MCP_PORT=8080
# MCP_AUTH_ENABLED=true
# MCP_API_KEY_1=prod-key:550e8400-e29b-41d4-a716-446655440000::

# Example 3: SSE server for web clients
# MCP_MODE=sse
# MCP_HOST=localhost
# MCP_PORT=3000
# MCP_BASE_URL=http://localhost:3000
# MCP_AUTH_ENABLED=true
# MCP_API_KEY_1=web-key:550e8400-e29b-41d4-a716-446655440000::
